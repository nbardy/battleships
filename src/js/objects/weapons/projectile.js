// Generated by CoffeeScript 1.6.1
(function() {
  var invSqrt, minus, normalize, render, update;

  invSqrt = function(x) {
    return 1 / Math.sqrt(x);
  };

  minus = function(vec1, vec2) {
    return {
      x: vec1.x - vec2.x,
      y: vec1.y - vec2.y
    };
  };

  normalize = function(vec) {
    var scale, val;
    val = Math.pow(vec.x, 2) + Math.pow(vec.y, 2);
    scale = invSqrt(val);
    return {
      x: vec.x * scale,
      y: vec.y * scale
    };
  };

  render = function() {
    var sprite;
    sprite = new PIXI.Sprite(this.texture);
    sprite.anchor.x = .5;
    sprite.anchor.x = .5;
    sprite.position.x = this.position.x;
    sprite.position.y = this.position.y;
    return sprite;
  };

  update = function(dt) {
    var direction;
    direction = normalize(minus(this.target.position, this.position));
    this.position.x += direction.x * this.speed * dt;
    this.position.y += direction.y * this.speed * dt;
    return this;
  };

  module.exports = function(options) {
    if (options == null) {
      options = {};
    }
    return function(position, target) {
      return {
        type: 'projectile',
        acceleration: options.acceleration || 0,
        speed: options.speed || 1,
        texture: options.texture,
        render: render,
        target: target,
        update: update,
        position: {
          x: position.x || 0,
          y: position.y || 0
        }
      };
    };
  };

}).call(this);
